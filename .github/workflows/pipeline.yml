name: Deployment pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]
    types: [opened, synchronize]
jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with: 
          node-version: '12.x'
      - name: npm install
        run: npm install
      - name: lint
        run: npm run eslint
      - name: build
        run: npm run build
      - name: test
        run: npm run test
      - name: e2e tests
        uses: cypress-io/github-action@v2
        with:
          command: npm run test:e2e
          start: npm run start-prod
          wait-on: http://localhost:5000
      - name: heroku deploy
        uses: akhileshns/heroku-deploy@v3.8.9
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "stormy-plateau-59436"
          heroku_email: "rkwei@usc.edu"
          healthcheck: "https://stormy-plateau-59436.herokuapp.com/version"
          checkstring: "1"
          rollbackonhealthcheckfailed: true
        if: ${{ github.event_name == 'push' }}
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.33.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: 'patch'
        if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ' '), '#skip') }}
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          if_mention: 'success,failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        # a_test_job:
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: gihub context
  #       env:
  #         GITHUB_CONTEXT: ${{ join(github.event.commits.*.message, ' ') }}
  #       run: echo "$GITHUB_CONTEXT"
  #     - name: commits
  #       env:
  #         COMMITS: ${{ github.event_name == 'push' && contains(join(github.event.commits.*.message, ' '), '#skip') }}
  #       run: echo "$COMMITS"